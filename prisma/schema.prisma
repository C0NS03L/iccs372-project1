generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model LabRoom {
  id          BigInt        @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Experiments Experiments[]
}

model Experiments {
  id          BigInt   @id @default(autoincrement())
  title       String
  description String
  startDate   DateTime
  endDate     DateTime
  status      String   @default("PENDING")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Tasks       Task[]
  labRoomId   BigInt
  LabRoom     LabRoom  @relation(fields: [labRoomId], references: [id])
}

model Inventory {
  id                BigInt    @id @default(autoincrement())
  name              String
  description       String
  stockLevel        Int       @default(0)
  unit              String    @default("units") // Added unit field with default value
  lowStockThreshold Int       @default(5)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  Reorders          Reorder[]
}

model Reorder {
  id            BigInt    @id @default(autoincrement())
  inventoryId   BigInt
  inventoryName String
  quantity      Int
  status        String    @default("PENDING")
  arrivalDate   DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  Inventory     Inventory @relation(fields: [inventoryId], references: [id])
}

model Task {
  id            BigInt       @id @default(autoincrement())
  title         String
  description   String
  completed     Boolean      @default(false)
  dueDate       DateTime?
  category      TaskCategory
  experimentsId BigInt?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  Experiments   Experiments? @relation(fields: [experimentsId], references: [id])
}

enum TaskCategory {
  EXPERIMENT
  MAINTENANCE
  GENERAL
}
